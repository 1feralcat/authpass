def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "design.codeux.authpass"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'authpass'
            keyPassword project.properties['design.codeux.authpass.storePassword']
            storeFile file(project.properties['design.codeux.authpass.storeFile'] ?: "invalid")
            storePassword project.properties['design.codeux.authpass.storePassword']
        }
    }

    flavorDimensions "hpdist"

    productFlavors {
        samsungapps {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension "hpdist"
            applicationIdSuffix ".samsungapps"
//            minSdkVersion 23
//            targetSdkVersion 29
            signingConfig signingConfigs.release
        }
        playstore {
            dimension "hpdist"
//            minSdkVersion 23
//            targetSdkVersion 29
            signingConfig signingConfigs.release
        }
        fdroid {
            dimension "hpdist"
            project.flutter.target = 'lib/env/fdroid.dart'
            applicationIdSuffix = '.fdroid'
            signingConfig null
        }

    }


    buildTypes {
        release {
        }
        debug {
            project.flutter.target = 'lib/env/development.dart'
            applicationIdSuffix = '.debug'
        }
    }
}

android.applicationVariants.all { variant ->
    if (variant.flavorName == "fdroid" && variant.buildType.name == "release") {
        variant.outputs.all { output ->
            output.outputFileName = "app-fdroid-release.apk"
        }
    }
}


flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation 'com.github.tony19:logback-android:2.0.0'
    implementation "io.github.microutils:kotlin-logging:1.7.6"

    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
